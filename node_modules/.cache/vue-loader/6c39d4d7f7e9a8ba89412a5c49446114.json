{"remainingRequest":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/views/hr/approval/DocumentApproval.vue?vue&type=style&index=0&id=1f2b3682&lang=css","dependencies":[{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/views/hr/approval/DocumentApproval.vue","mtime":1652251138418},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/css-loader/dist/cjs.js","mtime":1652081429906},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1652081430080},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/postcss-loader/src/index.js","mtime":1652081430025},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/cache-loader/dist/cjs.js","mtime":1652081426314},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/index.js","mtime":1652081430080}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50aXRsZXsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLnRpdGxlOmhvdmVyewogIGNvbG9yOiBvcmNoaWQ7Cn0K"},{"version":3,"sources":["/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/views/hr/approval/DocumentApproval.vue"],"names":[],"mappings":";AA4FA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf","file":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/views/hr/approval/DocumentApproval.vue","sourceRoot":"","sourcesContent":["<template >\n  <div style=\"width:500px; height: auto; margin: 10% auto\">\n    <BCard style=\"width: 650px; height: 500px;  box-shadow: rgba(0,0,0,0.3) 0px 4px 20px 0px; border-radius: 15px; text-align: center; overflow-y: auto\">\n      <h2> 결재 대기 문서</h2>\n      <div>\n        <div style=\"display: flex; font-weight:bold\">\n          <div style=\"border: 1px solid black; width: 50px\">순서</div>\n          <div style=\"border: 1px solid black; width: 80px\">성명</div>\n          <div style=\"border: 1px solid black; width: 120px\">문서 번호</div>\n          <div style=\"border: 1px solid black; width: 350px\">제목</div>\n          <div style=\"border: 1px solid black; width: 50px\">상태</div>\n        </div>\n\n        <div style=\"display: flex\" v-for=\"( item, index ) in waitingDocument\" :key=\"index\">\n          <div style=\"border: 1px solid black; width: 50px\">{{ index }}</div>\n          <div style=\"border: 1px solid black; width: 80px\">{{ item.empName }}</div>\n          <div style=\"border: 1px solid black; width: 120px\">{{ item.documentNumber }}</div>\n          <div style=\"border: 1px solid black; width: 350px\" class=\"title\" @click=\"openDocument($event)\" :id=\"item.documentNumber\">{{ item.title }}</div>\n          <div style=\"border: 1px solid black; width: 50px\">{{ item.status }}</div>\n        </div>\n      </div>\n    </Bcard>\n\n    <b-button variant=\"success\" @click=\"signUp\">저장</b-button>\n    <b-button variant=\"danger\" @click=\"showMe\">나가기</b-button>\n  </div>\n</template>\n<script>\n  import { mapState } from \"vuex\";\n\n  export default {\n      computed:{\n        ...mapState({\n          empData : state => state.hr.emp.empData,\n          waitingDocument : state => state.hr.approval.waitingDocument\n        })\n      },\n      created() {\n        this.$store.dispatch('hr/approval/getWaitingDocumentList', /*this.empData.positionCode*/ 'PO05')\n      },\n    data(){\n        return {\n          documentContent:[{\n            title:'',\n            type:'',\n            content:'',\n          }],\n          executive:[],\n          documentList : [],\n        }\n      },\n      methods:{\n        signUp(){\n\n          let document = this.documentContent.concat()\n          document[0].empNumber = this.empData.empNumber\n\n          let executiveArray = []\n          this.executive.map(e => {\n            if(e !== true && e !== false){\n              executiveArray = executiveArray.concat(e)\n            }\n          })\n\n          document[0].executive = executiveArray\n          const day = this.setDate();\n          document[0].documentNumber = `${day}`\n\n          console.log(document)\n          this.$store.dispatch('hr/approval/signUp', document)\n        },\n        setDate() {\n          const date = new Date()\n          const year = date.getFullYear()\n          const month = date.getMonth()+1\n          const day = date.getDay()\n          console.log(month)\n          const documentNumber = `${year}${('00'+month).slice(-2)}${('00'+day).slice(-2)}`\n          console.log(documentNumber)\n          return documentNumber\n        },\n        showMe(){\n          console.log(this.documentList)\n        },\n        openDocument(e){\n          const documentNumber = e.target.id\n          this.$store.dispatch('hr/approval/getDocumentContent', documentNumber)\n        }\n      }\n    }\n</script>\n<style>\n.title{\n  cursor: pointer;\n}\n.title:hover{\n  color: orchid;\n}\n</style>"]}]}