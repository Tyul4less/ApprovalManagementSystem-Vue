{"remainingRequest":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/router/PaymentPage.vue?vue&type=style&index=0&id=6604b030&lang=css","dependencies":[{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/router/PaymentPage.vue","mtime":1652083713111},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/css-loader/dist/cjs.js","mtime":1652081429906},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1652081430080},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/postcss-loader/src/index.js","mtime":1652081430025},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/cache-loader/dist/cjs.js","mtime":1652081426314},{"path":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/node_modules/vue-loader-v16/dist/index.js","mtime":1652081430080}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9IYW1CdXJVay5zY3NzJzsKICAgIEBpbXBvcnQgJy4uL2Fzc2V0cy9zY3NzL1BheW1lbnRNb2RhbC5zY3NzJzsKICAgIC5maW5hbFByaWNlewogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgIGZvbnQtc2l6ZTogMzBweDsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDUwcHg7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjOEJCQ0ZGOwogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICBmbG9hdDogYm90dG9tOwogICAgICAgIHJpZ2h0OiAwcHg7CiAgICAgICAgYm90dG9tOiAwcHg7CiAgICB9CiAgICAuYmFua09wdGlvbnsKICAgICAgICB3aWR0aDogOTUlOwogICAgICAgIGhlaWdodDogNTAwcHg7CiAgICAgICAgbWFyZ2luOjIuNSUgMi41JSAyLjUlIDIuNSU7CiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIH0KICAgIC5mYWRlLWVudGVyewogICAgICAgIG9wYWNpdHk6MC41CiAgICB9CiAgICAuZmFkZS1lbnRlci1hY3RpdmUsCiAgICAuZmFkZS1sZWF2ZS1hY3RpdmV7CiAgICAgICAgdHJhbnNpdGlvbjpvcGFjaXR5IDAuM3MgZWFzZS1vdXQ7CiAgICB9CiAgICAuZmFkZS1sZWF2ZS10b3sKICAgICAgICBvcGFjaXR5OiAwOwogICAgfQo="},{"version":3,"sources":["/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/router/PaymentPage.vue"],"names":[],"mappings":"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","file":"/Users/gwondaewon/Workspace/ApprovalManagementSystem/VueProjectBase/src/router/PaymentPage.vue","sourceRoot":"","sourcesContent":["<template >\n    <div>\n        <div class=\"paymentOption\" style=\"min-width: 610px\">\n\n            <div class=\"bankOption\">\n                <div ref=\"bankPointer\" style=\"border:4px solid rgba(255, 150, 220, 0); margin:2px;\">\n\n                    <div style=\"border-left: 2px solid #8BBCFF; border-right: 2px solid #8BBCFF; width: 75px\">은행 선택</div>\n                    <div class=\"form-check\" v-for=\"bank in bankList\" :key=\"bank\"\n                         style=\"width: 50%; display: inline-block; margin-top: 10px\">\n                        <input class=\"form-check-input border-2\" v-model='checkedBank' :value=\"bank.id\" type=\"checkbox\" @change=\"checkFunc($event)\">\n                        <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                           {{bank.bank}}\n                        </label>\n                    </div>\n                </div>\n                    <hr style=\"border:1px solid #007bff\"/>\n                <div style=\"border:4px solid rgba(0,0,0,0); margin:2px;\">\n                    <div style=\"display: inline-block; border-left: 2px solid #8BBCFF; border-right: 2px solid #8BBCFF; width: 75px\">할부 선택</div>\n\n                    <select style=\"display:inline-block; margin-left: 20px\" v-model=\"Installment\">\n                        <option>일시불</option>\n                        <option>2개월</option>\n                        <option>3개월</option>\n                        <option>4개월</option>\n                        <option>5개월</option>\n                        <option>6개월</option>\n                        <option>8개월</option>\n                        <option>10개월</option>\n                        <option>12개월</option>\n                    </select>\n                        <br/>\n\n                    <div class=\"form-check\" style=\"width: 100px; display: inline-block; margin-top: 10px;\n                        border:1px solid #007bff; margin-top: 15px\">\n                        <input class=\"form-check-input border-2\" type=\"checkbox\" v-model='isAllChecked' @click=\"allCheck\">\n                        <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                            전체 선택\n                        </label>\n                    </div>\n\n                        <br/>\n                    <div style=\"border:4px solid rgba(255, 150, 220, 0); width: 230px; height: 34px; margin: 15px 0 -5px -4px\" ref=\"RequiredSelectionPointer\">\n                        <div class=\"form-check\"\n                             style=\"width: 220px; display: inline-block; margin-top: 0\">\n                            <input class=\"form-check-input border-2\" type=\"checkbox\" v-model=\"checkedApply\" :value=\"1\">\n                            <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                                제3자 정보제공 동의(필수)\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"form-check\" v-for=\"option in applyList\" :key=\"option.id\"\n                         style=\"width: 50%; display: inline-block; margin-top: 10px\">\n                        <input class=\"form-check-input border-2\" type=\"checkbox\" v-model=\"checkedApply\" :value=\"option.id\">\n                        <label class=\"form-check-label\" style=\"font-weight: bold;\">\n                            {{option.option}}\n                        </label>\n                    </div>\n                </div>\n\n                <div class=\"finalPrice\">\n                    최종 가격 : {{totalPrice[0].price}}<p style=\"display:inline-block\">원</p>\n\n                    <input type=\"button\" class=\"btn btn-primary\" style=\"float: right; margin: 5px 5px 0 0\" @click=\"cardModal\" value=\"카드결제\"/>\n                    <input type=\"button\" class=\"btn btn-primary\" style=\"float: right; margin: 5px 5px 0 0\" @click=\"cashModal\" value=\"현금결제\"/>\n                </div>\n            </div>\n        </div>\n        <div class=\"basket\" style=\"overflow-y: scroll; overflow-x: hidden; min-width: 360px;\">\n\n            <template v-for=\"menu in basket\" v-bind:key=\"menu.id\">\n                <div id=\"menu\">\n                    <div id=\"imgDiv\">\n                        <img id=\"menuImg\" :src=\"menu.image\" :alt=\"menu.name\" />\n                    </div>\n                    <hr style=\"margin-top: 10px; margin-bottom: 10px;\"/>\n                    <div>{{menu.name}}</div>\n                    <div>{{menu.price}}원</div>\n                    <div class=\"\">{{menu.EA}}개</div>\n                </div>\n            </template>\n        </div>\n\n        <transition name=\"fade\" mode=\"out-in\">\n            <paymentModal @close=\"closeModal\" v-if=\"modal\">\n                <template v-slot:header>\n                    결제 내용을 확인하시고 맞으시면 결제버튼을 눌러주십시오.\n                </template>\n                <template v-slot:body>\n                    <div>은행 : {{selectedBank}}</div>\n                    <div>할부 : {{Installment}}</div>\n                    <div>결제하실 금액 : {{totalPrice[0].price}}</div>\n                </template>\n\n                <template v-slot:footer>\n                    <input class=\"btn btn-primary\" type=\"button\" @click=\"applyPayment\" value=\"결제\"/>\n                    <input class=\"btn btn-primary\" type=\"button\" @click=\"closeModal\" value=\"취소\"/>\n                </template>\n            </paymentModal>\n        </transition>\n\n        <transition name=\"fade\" mode=\"out-in\">\n            <paymentModal @close=\"loadingModalClose\" v-if=\"loadingModal\">\n                <template v-slot:header>\n                    결제가 진행중입니다...\n                    <div class=\"spinner-border\" role=\"status\">\n                        <span class=\"sr-only\"></span>\n                    </div>\n                </template>\n                <template v-slot:body>\n                    잠시만 기다려 주십시오.\n                </template>\n\n                <template v-slot:footer>\n                    <input class=\"btn btn-primary\" type=\"button\" @click=\"loadingModalClose\" value=\"취소\"/>\n                </template>\n            </paymentModal>\n        </transition>\n    </div>\n</template>\n<script>\n    import { mapState } from \"vuex\"\n    import paymentModal from '../components/modal/PaymentModal'\n    export default {\n        components: { paymentModal },\n        created() {\n            if (this.totalPrice[0].confirm === false){\n                this.$swal.fire({\n                    icon: 'error',\n                    title: '메뉴를 제대로 확인하셨나요?',\n                    text: '메뉴선택에서 확정을 누르고 오세요!',\n                    confirmButtonText: '돌아가기',\n                    footer: '<a href=\"\">문제가 있다면 직원 호출하기</a>'\n                })\n                history.back()\n            }\n        },\n        computed:{\n            ...mapState(['menuList']),\n            ...mapState(['basket']),\n            ...mapState(['totalPrice']),\n        },\n        methods:{\n            checkFunc(event) {\n                for(let i=1; i<=this.checkedBank.length; i++){\n                    this.selectedBank = this.bankList[event.target.value-1].bank\n                    if(this.checkedBank[i] == event.target.value){\n                        this.checkedBank.splice(i-1,1);\n                    }\n                }\n            },\n            allCheck(){\n                if(!this.isAllChecked){\n                    for(let i=1; i<4; i++){\n                        this.checkedApply.push(i)\n                    }\n                    this.isAllChecked = true;\n                }else{\n                    this.checkedApply=[]\n\n                    this.isAllChecked  = false;\n                }\n            },\n            cardModal(){\n                if(this.checkedBank == ''){\n                    this.$swal.fire({\n                        icon: 'question',\n                        title: '선택된 은행이 없습니다.',\n                        text: '은행을 최소 하나 선택해주세요.',\n                        confirmButtonText: '은행 선택하기',\n                        footer: '<a href=\"\">문제가 있다면 직원 호출하기</a>'\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            this.bankPointer=this.$refs.bankPointer\n                            this.bankPointerShow()\n                        }\n                    })\n                }else if(!this.checkedApply.some(e => {return e == 1})){\n                    this.$swal.fire({\n                        icon: 'question',\n                        title: '필수 동의 체크!',\n                        text: '제3자 정보제공 동의를 체크해주세요',\n                        confirmButtonText: '돌아가기',\n                        footer: '<a href=\"\">문제가 있다면 직원 호출하기</a>'\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            this.bankPointer = this.$refs.RequiredSelectionPointer\n                            this.bankPointerShow()\n                        }\n                    })\n                }else{\n                    this.modal = true\n                }\n            },\n            closeModal() {\n                this.modal = false\n            },\n            applyPayment() {\n                this.modal=false\n                this.loadingModal=true\n                setTimeout(this.successPayment, 2000)\n            },\n\n            successPayment(){\n              this.$store.dispatch('resetBasket')\n            },\n            loadingModalClose() {\n                this.loadingModal = false\n            },\n            bankPointerShow() {\n                let setTime_func = setTimeout(this.banPointerFadeOut, 30)\n                if(this.opacity > 1) {\n                    console.log(\"0\")\n                    clearTimeout(setTime_func);\n                    this.bankPointerHide()\n                }\n            },\n            banPointerFadeOut() {\n                this.opacity += 0.1\n                this.bankPointer.style.borderColor = `rgba(255, 150, 220, ${this.opacity})`;\n                console.log(this.bankPointer.style.borderColor)\n                this.bankPointerShow()\n            },\n            bankPointerHide() {\n                let setTime_func = setTimeout(this.bankPointerFadeIn, 30)\n                if(this.opacity < 0) {\n                    console.log(\"1\")\n                    this.fadeCycle += 1\n                    clearTimeout(setTime_func);\n                    if(this.fadeCycle == 2){\n                        this.fadeCycle = 0\n                    }else{\n                        this.bankPointerShow()\n                    }\n                }\n            },\n            bankPointerFadeIn() {\n                this.opacity -= 0.1\n                this.bankPointer.style.borderColor = `rgba(255, 150, 220, ${this.opacity})`;\n                console.log(this.bankPointer.style.borderColor)\n                this.bankPointerHide()\n            },\n        },\n        data(){\n            return {\n                bankList :[\n                    {bank : '신한', id : 1},\n                    {bank : 'NH농협',id : 2},\n                    {bank : 'KB국민은행', id : 3},\n                    {bank : 'IBK기업은행', id : 4},\n                    {bank : 'K뱅크', id : 5},\n                    {bank : '제주은행', id : 6},\n                    {bank : '우체국', id : 7},\n                    {bank : '하나은행', id : 8},\n                    {bank : '우리은행', id : 9},\n                    {bank : '새마을금고', id : 10},\n                    {bank : '부산은행', id : 11},\n                    {bank : '광주은행', id : 12},\n                    {bank : '대구은행', id : 13},\n                    {bank : 'KDB신업은행', id : 14},\n                    {bank : '경남은행', id : 15},\n                    {bank : '수협중앙회', id : 16},\n                ],\n                applyList : [\n                    {option : 'SNS 이벤트성 광고 수신 동의(선택)', id : 2},\n                    {option : '홍보관련 메일 수신 동의(선택)', id : 3}\n                ],\n                checkedBank:[],\n                checkedApply:[],\n                isAllChecked:false,\n                Installment:'일시불',\n                modal: false,\n                selectedBank: '',\n                message: '',\n                opacity : 1,\n                fadeCycle : 0,\n                bankPointer : '',\n                loadingModal : false\n            }\n        }\n    }\n</script>\n<style>\n    @import '../assets/scss/HamBurUk.scss';\n    @import '../assets/scss/PaymentModal.scss';\n    .finalPrice{\n        font-weight: bold;\n        font-size: 30px;\n        width: 100%;\n        height: 50px;\n        display: inline-block;\n        border-top: 2px solid #8BBCFF;\n        position: absolute;\n        float: bottom;\n        right: 0px;\n        bottom: 0px;\n    }\n    .bankOption{\n        width: 95%;\n        height: 500px;\n        margin:2.5% 2.5% 2.5% 2.5%;\n        text-align: left;\n    }\n    .fade-enter{\n        opacity:0.5\n    }\n    .fade-enter-active,\n    .fade-leave-active{\n        transition:opacity 0.3s ease-out;\n    }\n    .fade-leave-to{\n        opacity: 0;\n    }\n</style>"]}]}